// this file gives a rough overview of the language's features
// it will change because not all features are established yet
//in a real project, this file would be main.fr

import * from System;

type Fraction(numerator: int32, denominator: int32);

impl Fraction {
    func multiply(this, other: Fraction): Fraction {
        val numerator = this.numerator * other.numerator;
        val denominator = this.denominator * other.denominator;
        return Fraction(numerator, denominator);
    }
    
    func divide(this, other: Fraction): Fraction {
        val numerator = this.numerator * other.denominator;
        val denominator = this.denominator * other.numerator;
        return Fraction(numerator, denominator);
    }
    
    func ToString(this): string = "\{this.numerator} / \{this.denominator}";
}

module Math
{
    func add(a: int32, b: int32): _ = a + b;

    func distance(x1: float32, y1: float32, x2: float32, y2: float32): float32 {
        val diffX = x1 - x2;
        val diffY = y1 - y2;
        (diffX ** 2.0 + diffY ** 2.0) ** 0.5
    }

    func sum(min: int32, max: int32): _ {
        var s: int32 = 0;
        var counter = min;
        while (counter <= max) {
            s += counter;
            counter += 1;
        }
        return s;
    }
}



func main(): int32 {
    val s = Math.sum(10, 20);
    Console.WriteLine(s);
    val f = Math.distance(5.5, 5.0, 10.6, 5.5);
    
    val frac1 = Fraction(2, 3);
    val frac2 = Fraction(1, 5);
    val multiplied = frac1.multiply(frac2); 
    Console.WriteLine("Multiplied: \{multiplied}"); // 2/15
    Console.WriteLine("Divided: \{frac1.divide(frac2)}"); // 10/3
    
    return 0;
}
